from Models.weather import WeatherType, Weather, WeatherForecast, TemperatureInfo, MinMaxTemperature, DayTemperature

START = '''–ü—Ä–∏–≤–µ—Ç. –Ø —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É ‚Äî /show <city>. 
–ï—Å–ª–∏ —É –º–µ–Ω—è –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ –≤–∞—à –≥–æ—Ä–æ–¥, —É–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω –ê—Å—Ç–∞–Ω–∞)'''

NO_CITY = "–£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–ª–∏ –∞–¥—Ä–µ—Å –≤–æ—Ç —Ç–∞–∫: /show <city>"
WEATHER_FORMAT = "%type_emoji%%temperature%, %type%"
WEATHER = '''%city%. 
–°–µ–π—á–∞—Å %now%
%today%

–ü–æ–≥–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ 7 –¥–Ω–µ–π:
%week%'''

DAY_TEMPERATURE = '''–£—Ç—Ä–æ–º: %morning% C¬∞
–î–Ω—ë–º: %afternoon% C¬∞
–í–µ—á–µ—Ä–æ–º: %evening% C¬∞
–ù–æ—á—å—é: %night% C¬∞
'''

LOCATION_NOT_FOUND = "–Ø –Ω–µ –Ω–∞—à—ë–ª —Ç–∞–∫–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç–µ"

SCHEDULE_ARGS = "–£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏ –≤—Ä–µ–º—è —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. –í–æ—Ç —Ç–∞–∫: /set_schedule <city> <time>"
SCHEDULE_ALREAY_SET = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ %time% –¥–ª—è %city%. –í—ã –º–æ–∂–µ—Ç–µ –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. " \
                      "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ (/cancel_schedule), –∞ –∑–∞—Ç–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤–æ–µ"
SCHEDULE_SET = "–£—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å —è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –ø–æ–≥–æ–¥—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ %time%"
SCHEDULE_CANCEL = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
NO_SCHEDULE = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
SCHEDULE_CAPTION = "–ü–æ–≥–æ–¥–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é"

REQUEST_ERROR = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –Ø –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å"

WEATHER_TYPE_CAPTIONS = {
    WeatherType.CLEAR : "–Ø—Å–Ω–æ",
    WeatherType.ATMOSPHERE : "",
    WeatherType.CLOUDS : "–û–±–ª–∞—á–Ω–æ",
    WeatherType.SNOW : "–°–Ω–µ–≥",
    WeatherType.RAIN : "–î–æ–∂–¥—å",
    WeatherType.DRIZZLE : "–õ–∏–≤–µ–Ω—å",
    WeatherType.THUNDERTORM : "–ì—Ä–æ–∑–∞"
}

WEATHER_TYPE_EMOJIS = {
    WeatherType.CLEAR : "‚òÄÔ∏è",
    WeatherType.ATMOSPHERE : "",
    WeatherType.CLOUDS : "‚òÅÔ∏è",
    WeatherType.SNOW : "üå®",
    WeatherType.RAIN : "üåß",
    WeatherType.DRIZZLE : "‚òîÔ∏è",
    WeatherType.THUNDERTORM : "‚ö°Ô∏è"
}

BOT_AUTH_ERROR = '''–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞. –ù–µ —É–¥–∞–ª–∞—Å—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ %service%. –í–æ–∑–º–æ–∂–Ω–æ —É–∫–∞–∑–∞–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á/—Ç–æ–∫–µ–Ω API.
–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–∂–Ω–æ –≤ %config%'''

class Formatter:
    @staticmethod
    def weather(weather : Weather) -> str:
        message = WEATHER.replace("%city%", weather.adress)\
            .replace("%now%", Formatter.weather_format(weather.now))\
            .replace("%today%", Formatter._format_temperature(weather.today))
        week_message = ""
        for w in weather.week:
            date = w.datetime.strftime("%d.%m.%Y")
            week_message += f"{date}: {Formatter.weather_format(w)}\n"
        message = message.replace("%week%", week_message)
        return message

    @staticmethod
    def weather_format(weather : WeatherForecast) -> str:
        return WEATHER_FORMAT.replace("%type_emoji%", WEATHER_TYPE_EMOJIS[weather.type])\
            .replace("%temperature%", Formatter._format_temperature(weather.temperature))\
            .replace("%type%", WEATHER_TYPE_CAPTIONS[weather.type])


    @staticmethod
    def bot_auth_error(service_name : str, config_path : str):
        return BOT_AUTH_ERROR.replace("%service%", service_name)\
            .replace("%config%", config_path)


    @staticmethod
    def _format_temperature(temperature : TemperatureInfo):
        if type(temperature) == float:
            result = f"{'%.2f' % temperature} C¬∞"
        elif type(temperature) == MinMaxTemperature:
            result = f"{temperature.max} C¬∞ / {'%.2f' % temperature.min} C¬∞"
        elif type(temperature) == DayTemperature:
            result = DAY_TEMPERATURE.replace("%morning%", '%.2f' % temperature.morning)\
                .replace("%afternoon%", '%.2f' % temperature.afternoon)\
                .replace("%evening%", '%.2f' % temperature.evening)\
                .replace("%night%", '%.2f' % temperature.night)
        else:
            raise Exception("Invalid temperature info")
        return result
